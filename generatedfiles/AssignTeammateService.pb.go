// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: AssignTeammateService.proto

package generatedfiles

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type AssignTeamRequestgRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id         int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	CourseCode string `protobuf:"bytes,3,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
}

func (x *AssignTeamRequestgRPC) Reset() {
	*x = AssignTeamRequestgRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AssignTeammateService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTeamRequestgRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTeamRequestgRPC) ProtoMessage() {}

func (x *AssignTeamRequestgRPC) ProtoReflect() protoreflect.Message {
	mi := &file_AssignTeammateService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTeamRequestgRPC.ProtoReflect.Descriptor instead.
func (*AssignTeamRequestgRPC) Descriptor() ([]byte, []int) {
	return file_AssignTeammateService_proto_rawDescGZIP(), []int{0}
}

func (x *AssignTeamRequestgRPC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssignTeamRequestgRPC) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssignTeamRequestgRPC) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

type TeamDetailsgRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member1    string `protobuf:"bytes,1,opt,name=member1,proto3" json:"member1,omitempty"`
	Member2    string `protobuf:"bytes,2,opt,name=member2,proto3" json:"member2,omitempty"`
	Member1Id  int32  `protobuf:"varint,3,opt,name=member1id,proto3" json:"member1id,omitempty"`
	Member2Id  int32  `protobuf:"varint,4,opt,name=member2id,proto3" json:"member2id,omitempty"`
	CourseCode string `protobuf:"bytes,5,opt,name=courseCode,proto3" json:"courseCode,omitempty"`
	GroupId    int32  `protobuf:"varint,6,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *TeamDetailsgRPC) Reset() {
	*x = TeamDetailsgRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AssignTeammateService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamDetailsgRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamDetailsgRPC) ProtoMessage() {}

func (x *TeamDetailsgRPC) ProtoReflect() protoreflect.Message {
	mi := &file_AssignTeammateService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamDetailsgRPC.ProtoReflect.Descriptor instead.
func (*TeamDetailsgRPC) Descriptor() ([]byte, []int) {
	return file_AssignTeammateService_proto_rawDescGZIP(), []int{1}
}

func (x *TeamDetailsgRPC) GetMember1() string {
	if x != nil {
		return x.Member1
	}
	return ""
}

func (x *TeamDetailsgRPC) GetMember2() string {
	if x != nil {
		return x.Member2
	}
	return ""
}

func (x *TeamDetailsgRPC) GetMember1Id() int32 {
	if x != nil {
		return x.Member1Id
	}
	return 0
}

func (x *TeamDetailsgRPC) GetMember2Id() int32 {
	if x != nil {
		return x.Member2Id
	}
	return 0
}

func (x *TeamDetailsgRPC) GetCourseCode() string {
	if x != nil {
		return x.CourseCode
	}
	return ""
}

func (x *TeamDetailsgRPC) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// The response message containing the greetings
type AssignTeamResponsegRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message     string           `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	TeamDetails *TeamDetailsgRPC `protobuf:"bytes,2,opt,name=teamDetails,proto3" json:"teamDetails,omitempty"`
}

func (x *AssignTeamResponsegRPC) Reset() {
	*x = AssignTeamResponsegRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AssignTeammateService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignTeamResponsegRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTeamResponsegRPC) ProtoMessage() {}

func (x *AssignTeamResponsegRPC) ProtoReflect() protoreflect.Message {
	mi := &file_AssignTeammateService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTeamResponsegRPC.ProtoReflect.Descriptor instead.
func (*AssignTeamResponsegRPC) Descriptor() ([]byte, []int) {
	return file_AssignTeammateService_proto_rawDescGZIP(), []int{2}
}

func (x *AssignTeamResponsegRPC) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssignTeamResponsegRPC) GetTeamDetails() *TeamDetailsgRPC {
	if x != nil {
		return x.TeamDetails
	}
	return nil
}

var File_AssignTeammateService_proto protoreflect.FileDescriptor

var file_AssignTeammateService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a,
	0x15, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x67, 0x52, 0x50, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x54,
	0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x67, 0x52, 0x50, 0x43, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x67, 0x52,
	0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0b,
	0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x67,
	0x52, 0x50, 0x43, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x32, 0x55, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61,
	0x74, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x67, 0x52, 0x50, 0x43, 0x1a, 0x17, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x67, 0x52, 0x50, 0x43, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_AssignTeammateService_proto_rawDescOnce sync.Once
	file_AssignTeammateService_proto_rawDescData = file_AssignTeammateService_proto_rawDesc
)

func file_AssignTeammateService_proto_rawDescGZIP() []byte {
	file_AssignTeammateService_proto_rawDescOnce.Do(func() {
		file_AssignTeammateService_proto_rawDescData = protoimpl.X.CompressGZIP(file_AssignTeammateService_proto_rawDescData)
	})
	return file_AssignTeammateService_proto_rawDescData
}

var file_AssignTeammateService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_AssignTeammateService_proto_goTypes = []interface{}{
	(*AssignTeamRequestgRPC)(nil),  // 0: AssignTeamRequestgRPC
	(*TeamDetailsgRPC)(nil),        // 1: TeamDetailsgRPC
	(*AssignTeamResponsegRPC)(nil), // 2: AssignTeamResponsegRPC
}
var file_AssignTeammateService_proto_depIdxs = []int32{
	1, // 0: AssignTeamResponsegRPC.teamDetails:type_name -> TeamDetailsgRPC
	0, // 1: AssignTeamMate.AssignTeamMate:input_type -> AssignTeamRequestgRPC
	2, // 2: AssignTeamMate.AssignTeamMate:output_type -> AssignTeamResponsegRPC
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_AssignTeammateService_proto_init() }
func file_AssignTeammateService_proto_init() {
	if File_AssignTeammateService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_AssignTeammateService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignTeamRequestgRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AssignTeammateService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamDetailsgRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AssignTeammateService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignTeamResponsegRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AssignTeammateService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_AssignTeammateService_proto_goTypes,
		DependencyIndexes: file_AssignTeammateService_proto_depIdxs,
		MessageInfos:      file_AssignTeammateService_proto_msgTypes,
	}.Build()
	File_AssignTeammateService_proto = out.File
	file_AssignTeammateService_proto_rawDesc = nil
	file_AssignTeammateService_proto_goTypes = nil
	file_AssignTeammateService_proto_depIdxs = nil
}
